{"version":3,"sources":["bower_components/o-header/src/scss/_header.scss","bower_components/o-colors/src/scss/_palette.scss","bower_components/o-grid/src/scss/_main.scss","bower_components/o-grid/src/scss/_variables.scss","bower_components/sass-mq/_mq.scss","bower_components/o-header/src/scss/rows/_anon.scss","bower_components/o-header/src/scss/_mixins.scss","bower_components/o-header/src/scss/_variables.scss","bower_components/o-visual-effects/src/scss/_backgrounds.scss","bower_components/o-header/src/scss/rows/_top.scss","bower_components/o-icons/scss/_mixins.scss","bower_components/o-header/src/scss/rows/_search.scss","ig-header.css","bower_components/o-buttons/scss/_mixins.scss","bower_components/o-buttons/scss/_variables.scss","bower_components/o-header/src/scss/rows/_nav.scss","bower_components/o-typography/scss/_type_matrix.scss","bower_components/o-fonts/src/scss/_functions.scss","bower_components/o-typography/scss/_helpers.scss","bower_components/o-fonts/src/scss/_variables.scss","bower_components/o-header/src/scss/mega/menu.scss","bower_components/o-visual-effects/src/scss/_shadows.scss","bower_components/o-header/src/scss/mega/articles.scss","bower_components/o-header/src/scss/mega/subsections.scss"],"names":[],"mappings":"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","file":"ig-header.css","sourcesContent":["@if $o-header-is-silent == false {\n\n\t.o-header {\n\t\tcolor: oColorsGetColorFor('o-header', 'text');\n\t}\n\n\t.o-header__row {\n\t\tborder-bottom: 1px solid oColorsGetColorFor('o-header', 'border');\n\t}\n\n\t.o-header__container {\n\t\t@include oGridContainer();\n\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tdisplay: table;\n\t\t}\n\n\t\t&:after {\n\t\t\tclear: both;\n\t\t}\n\t}\n\n\t.o-header__visually-hidden {\n\t\tposition: absolute;\n\t\tclip: rect(0 0 0 0);\n\t\tmargin: -1px;\n\t\tborder: 0;\n\t\toverflow: hidden;\n\t\tpadding: 0;\n\t\twidth: 1px;\n\t\theight: 1px;\n\t}\n\n}\n","////\n/// @group o-colors\n/// @link http://registry.origami.ft.com/components/o-colors\n////\n\n$o-colors-palette: () !default;\n\n/// Colour palette\n///\n/// These are the colours that make up the FT palette.\n/// We don't use these colours directly, but instead assign them to 'use cases',\n/// which are defined in use-cases.scss.\n///\n/// In the list below, each line contains a colour name and a colour code,\n/// and is finished with a comma:\n///\n/// \t<colour name>:   <colour code>,\n///\n/// The colour name must be a single word comprising just letters,\n/// numbers, and dashes.\n///\n/// You can have as many spaces between the colour name and the colour code\n/// as you like (so you can line them up neatly), and you *MUST* finish the\n/// line with a comma.\n///\n/// @link http://next.ft.com/__styleguide/design-primitives#palette\n///\n/// @type map\n$o-colors-palette: map-merge((\n\t// Non-colour CSS values\n\t'transparent':           transparent,\n\t'inherit':               inherit,\n\n\t// Primary Palette\n\t'pink':                  #fff1e0,\n\t'black':                 #000000,\n\t'white':                 #ffffff,\n\t'blue':                  #2e6e9e,\n\t'dark-blue':             #275e86,\n\t'claret':                #9e2f50,\n\t'orange':                #d66d06,\n\n\t'grey-tint1':            #b0b0b0,\n\t'grey-tint2':            #999999,\n\t'grey-tint3':            #777777,\n\t'grey-tint4':            #505050,\n\t'grey-tint5':            #333333,\n\n\t'pink-tint1':            #f6e9d8,\n\t'pink-tint2':            #e9decf,\n\t'pink-tint3':            #cec6b9,\n\t'pink-tint4':            #a7a59b,\n\t'pink-tint5':            #74736c,\n\n\t// Colours\n\t'red':                   #cc0000,\n\t'green':                 #458b00,\n\n\t// Highlight tints\n\t'orange-tint1':          #eda45e,\n\t'brown-tint1':           #94826b,\n\t'yellow-tint1':          #eed485,\n\t'green-tint1':           #a6a471,\n\t'bluegreen-tint1':       #819e9a,\n\t'silver-tint1':          #c1b8b4,\n\n\t'purple-tint1':          #936971,\n\t'purple-tint2':          #737e7e,\n\n\t'red-tint1':             #b1493f,\n\t'red-tint2':             #c36256,\n\t'red-tint3':             #d17c70,\n\t'red-tint4':             #df9c92,\n\t'red-tint5':             #ebbcb3,\n\n\t'blue-tint1':            #598caf,\n\t'blue-tint2':            #75a5c2,\n\t'blue-tint3':            #8ab5cd,\n\t'blue-tint4':            #a9cadc,\n\t'blue-tint5':            #bcd7e5,\n\n\t// Sections colours\n\t'section-purple':        #92288f,\n\t'section-light-purple':  #ebcaec,\n\t'section-blue':          #0e6dcc,\n\t'section-light-blue':    #c5d4e8,\n\t'section-green':         #09a25c,\n\t'section-light-green':   #a1dbb2,\n\t'section-red':           #cc0033,\n\n\t// Next\n\t// http://next.ft.com/__styleguide/design-primitives#palette\n\t'warm-1':                #ffe9d7,\n\t'warm-2':                #f6e9d8,\n\t'warm-3':                #cec6b9,\n\t'warm-4':                #1d1d1d,\n\t'warm-5':                #fdf8f2,\n\t'warm-6':                #8b572a,\n\n\t'cold-1':                #505050,\n\t'cold-2':                #333333,\n\t'cold-3':                #1d1d1d,\n\n\t'blue-1':                #002758,\n\t'blue-2':                #eeeeee,\n\n\t'purple-1':              #410057,\n\t'purple-2':              #f3dee3,\n\n\t'teal-1':                #27757b,\n\t'teal-2':                #2bbbbf,\n\n\t'claret-1':              #9e2f50,\n\t'claret-2':              #ff7f8a,\n\t'claret-inverse':        #4f1828,\n\n), $o-colors-palette);\n","////\n/// @group o-grid\n/// @link http://registry.origami.ft.com/components/o-grid\n////\n\n/// Add a layout\n///\n/// @example scss\n///  @include oGridAddLayout($layout-name: P, $layout-width: 600px);\n///  @include oGridAddLayout($layout-name: XXL, $layout-width: 1600px, $gutter-width: 30px);\n///\n/// @param {String} $layout-name - Name of the layout (e.g. S)\n/// @param {Number} $layout-width - Layout width in px\n/// @param {Number} $gutter-width [null] - Gutter width in px\n@mixin oGridAddLayout($layout-name, $layout-width, $gutter-width: null) {\n\t$temp-layouts: ();\n\t$temp-gutters: (default: oGridGutter());\n\n\t// Add the new layout in the correct position:\n\t// (we want $o-grid-layouts and $o-grid-gutters to be ordered from the smallest to the largest layout)\n\t@for $index from 1 through length($o-grid-layouts) {\n\t\t$previous-layout-width: if($index == 1, 0, map-get($o-grid-layouts, nth($_o-grid-layout-names, $index - 1)));\n\t\t$current-layout-name: nth($_o-grid-layout-names, $index);\n\t\t$current-layout-width: map-get($o-grid-layouts, $current-layout-name);\n\n\t\t$current-gutter-width: map-get($o-grid-gutters, $current-layout-name);\n\n\t\t@if not ($previous-layout-width > $layout-width or $current-layout-width < $layout-width) {\n\t\t\t$temp-layouts: map-merge($temp-layouts, ($layout-name: $layout-width));\n\t\t\t$temp-gutters: map-merge($temp-gutters, ($layout-name: $gutter-width));\n\t\t}\n\n\t\t$temp-layouts: map-merge($temp-layouts, ($current-layout-name: $current-layout-width));\n\n\t\t@if $current-gutter-width {\n\t\t\t$temp-gutters: map-merge($temp-gutters, ($current-layout-name: $current-gutter-width));\n\t\t}\n\t}\n\t$o-grid-layouts: $temp-layouts !global;\n\t$_o-grid-layout-names: map-keys($o-grid-layouts) !global;\n\n\t@if $gutter-width {\n\t\t$o-grid-gutters: $temp-gutters !global;\n\t}\n\n\t$_o-grid-max-width: map-get($o-grid-layouts, nth($_o-grid-layout-names, -1)) !global;\n}\n\n/// Get the gutter of a layout\n///\n/// @param {String|null|Boolean} $layout-name - One of $o-grid-layouts\n@function oGridGutter($layout-name: default) {\n\t// This layout was assigned a gutter directly\n\t@if map-get($o-grid-gutters, $layout-name) {\n\t\t@return map-get($o-grid-gutters, $layout-name);\n\t}\n\n\t// Checking the position of the layout in the list of layouts\n\t$layout-index: index($_o-grid-layout-names, $layout-name);\n\n\t// The first layout (S) should get the default gutter\n\t@if $layout-index == 1 {\n\t\t@return oGridGutter();\n\t}\n\n\t// No gutter found for this layout, let's try again with a smaller one\n\t$layout: nth($_o-grid-layout-names, $layout-index - 1);\n\t@return oGridGutter($layout);\n}\n\n/// Get the max width of a layout\n///\n/// @example\n///  .my-large-container { width: oGridGetMaxWidthForLayout(L); }\n///\n/// @param {String} $layout-name - one of $o-grid-layouts\n/// @param {String} $grid-mode [$o-grid-mode]\n@function oGridGetMaxWidthForLayout($layout-name, $grid-mode: $o-grid-mode) {\n\t$grid-is-responsive: $grid-mode != 'fixed';\n\n\t$index: index($_o-grid-layout-names, $layout-name);\n\n\t// Largest layout: return its width directly\n\t@if $index == length($_o-grid-layout-names) {\n\t\t@return $_o-grid-max-width;\n\t}\n\n\t// Smaller layouts:\n\t@if $grid-is-responsive {\n\t\t// - The grid is responsive (fluid or snappy):\n\t\t//   return the next larger layout width\n\t\t$next-layout: nth($_o-grid-layout-names, $index + 1);\n\t\t@return map-get($o-grid-layouts, $next-layout);\n\t} @else {\n\t\t// - The grid is fixed, return the current layout width\n\t\t@return map-get($o-grid-layouts, $layout-name);\n\t}\n}\n\n/// % width of an element in the grid\n///\n/// @example\n///  .one-half   { width: oGridColspan(1/2); }      // 50%\n///  .other-half { width: oGridColspan(one-half); } // 50%\n///  .sidebar    { width: oGridColspan(5); }        // 41.66667%\n///  .two-thirds { width: oGridColspan(2/3); }      // 66.66667%\n///  .4-out-of-6 { width: oGridColspan(4, 6); }     // 66.66667%\n///\n/// @param {Number | String} $span - Number of columns the element spans over\n/// @param {Number} $total-cols [$o-grid-columns] - Number of columns in the grid\n///\n/// @returns {Number} width of the element in the grid, in percents\n@function oGridColspan($span, $total-cols: $o-grid-columns) {\n\t// Match the HTML helper API with human-friendly numbers\n\t@if $span == 'one-half'       { $span: 1/2; }\n\t@if $span == 'one-quarter'    { $span: 1/4; }\n\t@if $span == 'one-third'      { $span: 1/3; }\n\t@if $span == 'two-thirds'     { $span: 2/3; }\n\t@if $span == 'three-quarters' { $span: 3/4; }\n\n\t@if $span == 'full-width' {\n\t\t@return 100%;\n\t} @else {\n\t\t@if $span >= 1 {\n\t\t\t// A number of columns is supplied: converting it into a fraction\n\t\t\t// of the total number of columns\n\t\t\t@return percentage($span / $total-cols);\n\t\t} @else {\n\t\t\t// A fraction (1/2) or a number (0.5) is supplied:\n\t\t\t// converting it into a percentage\n\t\t\t@return percentage($span);\n\t\t}\n\t}\n}\n\n/// Apply styles at a given layout size\n/// Wrapper for the Sass MQ mq() mixin\n///\n/// @link https://git.io/sass-mq Sass MQ documentation\n///\n/// @example\n///  // Turn the color of an element red at medium layout size and up\n///  @include oGridRespondTo(M) {\n///  \telement {\n///  \t\tcolor: red;\n///  \t}\n///  }\n///  // Turn the color of an element blue until medium layout\n///  element {\n///  \t@include oGridRespondTo($until: M) {\n///  \t\tcolor: blue;\n///  \t}\n///  }\n///  // Turn the color of an element green from small layout until medium layout\n///  element {\n///  \t@include oGridRespondTo($from: S, $until: M) {\n///  \t\tcolor: green;\n///  \t}\n///  }\n///\n/// @param {String} from - one of $o-grid-layouts\n/// @param {String} until - one of $o-grid-layouts\n@mixin oGridRespondTo($from: false, $until: false) {\n\t$grid-is-responsive: $o-grid-mode != 'fixed';\n\n\t$original-scope: $_o-grid-scope;\n\t$_o-grid-scope: 'respondTo' !global;\n\n\t@include mq(\n\t\t$from: $from,\n\t\t$until: $until,\n\t\t$responsive: $grid-is-responsive,\n\t\t$breakpoints: $o-grid-layouts,\n\t\t$static-breakpoint: $o-grid-fixed-layout\n\t) {\n\t\t@content;\n\t}\n\n\t// Restore previously set scope\n\t$_o-grid-scope: $original-scope !global;\n}\n\n/// Target styles at Internet Explorer 8 only\n@mixin oGridTargetIE8 {\n\t// Users may target styles at IE8, but only in the global scope,\n\t// but it shouldn't output any code inside of a oGridRespondTo call\n\t@if 'global' == $_o-grid-scope {\n\t\t@if 'inline' == $o-grid-ie8-rules {\n\t\t\t@media \\0screen {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t\t@if 'only' == $o-grid-ie8-rules {\n\t\t\t@content;\n\t\t}\n\t}\n}\n\n/// Target styles at modern browsers that support @media queries properly\n@mixin oGridTargetModernBrowsers {\n\t/// Output code as-is if called inside of a media query,\n\t/// since it will target modern browsers already\n\t@if $_o-grid-scope == 'respondTo' {\n\t\t@content;\n\t} @else {\n\t\t@if not ('only' == $o-grid-ie8-rules) {\n\t\t\t@media only screen {\n\t\t\t\t@content;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/// Human friendly names for portions and centering:\n///\n/// - hide\n/// - full-width\n/// - one-half\n/// - one-third\n/// - two-thirds\n/// - one-quarter\n/// - three-quarters\n/// - center\n/// - uncenter\n///\n/// @access private\n///\n/// @param {String} $layout-name [null]\n@mixin _oGridHumanFriendlyKeywords($layout-name: null) {\n\t[data-o-grid-colspan~=\"#{$layout-name}hide\"] {\n\t\tdisplay: none;\n\t}\n\n\t// Center and un-center\n\t[data-o-grid-colspan~=\"#{$layout-name}center\"] {\n\t\t@include oGridCenter;\n\t}\n\t// Since writing [data-o-grid-colspan~=\"uncenter\"] wouldn't make much sense\n\t// we only allow \"uncenter\" combined with a layout (e.g. XLuncenter)\n\t@if $layout-name != null {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}uncenter\"] {\n\t\t\t@include oGridUncenter;\n\t\t}\n\t}\n\n\t// Portions\n\t@each $human-friendly-name in (full-width, one-half, one-third, two-thirds, one-quarter, three-quarters) {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}#{$human-friendly-name}\"] {\n\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t// Restore visibility from `display: none`\n\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\tdisplay: block;\n\n\t\t\t// Define width in %\n\t\t\t@include _oGridFixSafariWrap($human-friendly-name);\n\t\t\tmin-width: oGridColspan($human-friendly-name);\n\t\t\tmax-width: oGridColspan($human-friendly-name);\n\t\t\twidth: oGridColspan($human-friendly-name);\n\t\t}\n\t}\n}\n\n/// Shuffle columns around using pull, push and offset\n///\n/// @access private\n///\n/// @param {String} $layout-name [null]\n@mixin _oGridShuffleColumns($layout-name: null) {\n\t@for $colspan from 0 through ($o-grid-columns - 1) {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}push#{$colspan}\"] {\n\t\t\t@include oGridPush($colspan);\n\t\t}\n\t\t[data-o-grid-colspan~=\"#{$layout-name}pull#{$colspan}\"] {\n\t\t\t@include oGridPull($colspan);\n\t\t}\n\t\t[data-o-grid-colspan~=\"#{$layout-name}offset#{$colspan}\"] {\n\t\t\t@include oGridOffset($colspan);\n\t\t}\n\t}\n}\n\n/// Base column styles and responsive layout width\n///\n/// @example scss Block has column styles\n///   el { @include oGridColspan(); }\n///\n/// @example scss 4-column wide block\n///   el { @include oGridColspan(4); }\n///\n/// @example scss Half-width block\n///   el { @include oGridColspan(1/2); }\n///\n/// @example scss Block is full-width by default, 8-column wide on Medium layouts and hidden on Large layouts\n///   el { @include oGridColspan((default: 12, M: 8, L: hide)); }\n///\n/// @param {Number | Map} $span [null]\n@mixin oGridColspan($span: null, $width-only: false) {\n\t@if not $width-only {\n\t\tposition: relative; // Required for push and pull\n\t\tfloat: left;\n\t\tbox-sizing: border-box;\n\t\tflex: 1 1 0%;\n\n\t\t@include oGridTargetIE8 {\n\t\t\t// scss-lint:disable ImportantRule\n\t\t\tmin-width: 0 !important;\n\t\t}\n\n\t\t@if $o-grid-mode == 'fixed' {\n\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t} @else {\n\t\t\t@each $layout-name in map-keys($o-grid-gutters) {\n\t\t\t\t@if $layout-name == 'default' {\n\t\t\t\t\tpadding-left: oGridGutter();\n\t\t\t\t} @else {\n\t\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t\tpadding-left: oGridGutter($layout-name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@include oGridTargetIE8 {\n\t\t\t\t// Output grid modifiers for the fixed layout displayed by IE8\n\t\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t\t}\n\t\t}\n\t}\n\t@if $span {\n\t\t@include _oGridColumnWidth($span);\n\t}\n}\n\n/// Cross browser column widths across layouts\n///\n/// @example scss\n///   el { @include _oGridColumnWidth(4); }\n///   el { @include _oGridColumnWidth(1/2); }\n///   el { @include _oGridColumnWidth(hide); }\n///   el { @include _oGridColumnWidth((default: 12, M: 8, L: hide)); }\n///\n/// @param {Number | Map} $span\n@mixin _oGridColumnWidth($span) {\n\t// Special case: the column is hidden by default\n\t@if $span == 'hide' {\n\t\tdisplay: none;\n\t} @else {\n\t\t// $span is a number or a keyword, so we're outputting the default width for that column\n\t\t@if type-of($span) == number or type-of($span) == string {\n\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t// Restore visibility from `display: none`\n\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\tdisplay: block;\n\n\t\t\t// Define width in %\n\t\t\t@include _oGridFixSafariWrap($span);\n\t\t\tmin-width: oGridColspan($span);\n\t\t\tmax-width: oGridColspan($span);\n\n\t\t\t// For IE8\n\t\t\twidth: oGridColspan($span);\n\t\t}\n\t}\n\n\t// $span is a map, we're looping through all of the layouts\n\t@if type-of($span) == map {\n\t\t@each $layout-name, $layout-span in $span {\n\t\t\t@if $layout-name == 'default' {\n\t\t\t\t@include _oGridColumnWidth($layout-span);\n\t\t\t} @else {\n\t\t\t\t@if $layout-span == 'hide' {\n\t\t\t\t\t// Target IE8 only if the layout is smaller than the maximum width of the fixed layout\n\t\t\t\t\t@if index($_o-grid-layout-names, $layout-name) <= index($_o-grid-layout-names, $o-grid-fixed-layout) {\n\t\t\t\t\t\t@include oGridTargetIE8 {\n\t\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t}\n\t\t\t\t} @else {\n\t\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t\t\t\t// Restore visibility from `display: none`\n\t\t\t\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\t\t\t\tdisplay: block;\n\n\t\t\t\t\t\t// Define width in %\n\t\t\t\t\t\t@include _oGridFixSafariWrap($layout-span);\n\t\t\t\t\t\tmin-width: oGridColspan($layout-span);\n\t\t\t\t\t\tmax-width: oGridColspan($layout-span);\n\t\t\t\t\t}\n\t\t\t\t\t// Target IE8 only if the layout is smaller than the maximum width of the fixed layout\n\t\t\t\t\t@if index($_o-grid-layout-names, $layout-name) <= index($_o-grid-layout-names, $o-grid-fixed-layout) {\n\t\t\t\t\t\t@include oGridTargetIE8 {\n\t\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\t\twidth: oGridColspan($layout-span);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/// Grid container\n///\n/// @param {String} $grid-mode [$o-grid-mode]\n/// @param {Boolean} $bleed [false]\n@mixin oGridContainer($grid-mode: $o-grid-mode, $bleed: false) {\n\tposition: relative;\n\tbox-sizing: border-box;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmin-width: $o-grid-min-width;\n\t// Older browsers get a fixed-width layout\n\tmax-width: oGridGetMaxWidthForLayout($o-grid-fixed-layout);\n\n\t@if $bleed {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t}\n\n\t@if $grid-mode == 'fixed' {\n\t\t// If the grid isn't fluid, we set it to a certain width\n\t\twidth: oGridGetMaxWidthForLayout($o-grid-fixed-layout, $grid-mode: 'fixed');\n\t\t@if not $bleed {\n\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t\tpadding-right: oGridGutter($o-grid-fixed-layout);\n\t\t}\n\t} @else {\n\t\tmax-width: $_o-grid-max-width;\n\n\t\t@each $layout-name in map-keys($o-grid-gutters) {\n\t\t\t@if $layout-name == 'default' {\n\t\t\t\t@if not $bleed {\n\t\t\t\t\tpadding-left: oGridGutter();\n\t\t\t\t\tpadding-right: oGridGutter();\n\t\t\t\t}\n\t\t\t} @else {\n\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t@if not $bleed {\n\t\t\t\t\t\tpadding-left: oGridGutter($layout-name);\n\t\t\t\t\t\tpadding-right: oGridGutter($layout-name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@each $layout-name in $_o-grid-layout-names {\n\t\t\t@if index($_o-grid-layout-names, $layout-name) >= index($_o-grid-layout-names, $o-grid-start-snappy-mode-at) {\n\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\t// If the grid mode is snappy, all rows should be snappy\n\t\t\t\t\t@if $grid-mode == 'snappy' {\n\t\t\t\t\t\tmax-width: map-get($o-grid-layouts, $layout-name);\n\t\t\t\t\t}\n\t\t\t\t\t@if $grid-mode == 'fluid' {\n\t\t\t\t\t\t// If the grid mode is fluid, then use a class to make a row or a set of rows snappy\n\t\t\t\t\t\t.o-grid-snappy &,\n\t\t\t\t\t\t&--snappy {\n\t\t\t\t\t\t\tmax-width: map-get($o-grid-layouts, $layout-name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Serve a fixed-width layout to IE8\n\t\t@include oGridTargetIE8 {\n\t\t\t@if not $bleed {\n\t\t\t\tpadding-left: oGridGutter($o-grid-fixed-layout);\n\t\t\t\tpadding-right: oGridGutter($o-grid-fixed-layout);\n\t\t\t}\n\t\t\twidth: oGridGetMaxWidthForLayout($o-grid-fixed-layout, $grid-mode: 'fixed');\n\t\t}\n\t}\n}\n\n/// Base row styles\n///\n/// @param {String} $grid-mode [$o-grid-mode]\n@mixin oGridRow {\n\tclear: both;\n\tflex-wrap: wrap; // Note that this breaks in old Firefox\n\n\t& {\n\t\t// Prevents autoprefixer from outputting display: -webkit-box;, which is buggy\n\t\t// NOTE - needs to be in its own block, as the autoprefixer: off comment applies to the whole block\n\t\t/*autoprefixer: off*/\n\t\tdisplay: -webkit-flex;\n\t\tdisplay: -ms-flexbox;\n\t\tdisplay: flex;\n\t\t@media print {\n\t\t\tdisplay: inherit;\n\t\t}\n\t}\n\n\t@if $o-grid-mode == 'fixed' {\n\t\tmargin-left: -1 * oGridGutter($o-grid-fixed-layout);\n\t} @else {\n\t\t@each $layout-name in map-keys($o-grid-gutters) {\n\t\t\t@if $layout-name == 'default' {\n\t\t\t\tmargin-left: -1 * oGridGutter();\n\t\t\t} @else {\n\t\t\t\t@include oGridRespondTo($layout-name) {\n\t\t\t\t\tmargin-left: -1 * oGridGutter($layout-name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@include oGridTargetIE8 {\n\t\t\tmargin-left: -1 * oGridGutter($o-grid-fixed-layout);\n\t\t}\n\t}\n\n\t// Clearfix for IE9 and below\n\tzoom: 1;\n\n\t&:before,\n\t&:after {\n\t\tcontent: '';\n\t\tdisplay: table;\n\t\t//we only want display: table (and therefore the clear:both) to apply if flexbox is not supported\n\t\t& {\n\t\t\t// Prevents autoprefixer from outputting display: -webkit-box;, which is buggy\n\t\t\t// NOTE - needs to be in its own block, as the autoprefixer: off comment applies to the whole block\n\t\t\t/*autoprefixer: off*/\n\t\t\tdisplay: -webkit-flex;\n\t\t\tdisplay: -ms-flexbox;\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n\t&:after {\n\t\tclear: both;\n\t}\n}\n\n/// Remove gutters from columns in a row\n///\n/// @param {string} column child selector\n@mixin oGridRowCompact($column-selector: \"[o-grid-colspan]\") {\n\tmargin-left: 0;\n\n\t> #{unquote($column-selector)} {\n\t\tpadding-left: 0;\n\t}\n}\n\n/// Remove row styles\n@mixin oGridResetRow {\n\tclear: none;\n\tdisplay: block;\n\tflex-wrap: nowrap;\n\tmargin-left: 0;\n\n\t&:before,\n\t&:after {\n\t\tdisplay: none;\n\t}\n}\n\n/// Center column\n@mixin oGridCenter {\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tfloat: none;\n}\n\n/// Uncenter column\n@mixin oGridUncenter {\n\tmargin-left: 0;\n\tmargin-right: 0;\n\tfloat: left;\n}\n\n/// Remove column styles\n@mixin oGridResetColumn {\n\tpadding-left: 0;\n\tpadding-right: 0;\n\tfloat: none;\n\twidth: auto;\n\tmin-width: 0;\n\tmax-width: none;\n\tflex: none;\n}\n\n/// Reorder visually: pull\n///\n/// @param {Number} $columns\n@mixin oGridPull($columns) {\n\tright: oGridColspan($columns);\n\tleft: auto;\n}\n\n/// Reorder visually: push\n///\n/// @param {Number} $columns\n@mixin oGridPush($columns) {\n\tleft: oGridColspan($columns);\n\tright: auto;\n}\n\n/// Offset: add space before a column\n///\n/// @param {Number} $columns\n@mixin oGridOffset($columns) {\n\tmargin-left: oGridColspan($columns);\n}\n\n/// Width and gutter removal modifiers for a given layout.\n///\n/// @output\n///  [data-o-grid-colspan~=\"S1\"] { width: %; }\n///\n/// @access private\n///\n/// @param {String} $layout-name - One of $o-grid-layouts\n@mixin _oGridModifiersForLayout($layout-name) {\n\t@if $o-grid-human-friendly-selectors == true {\n\t\t@include _oGridHumanFriendlyKeywords($layout-name);\n\t}\n\n\t@if $o-grid-shuffle-selectors == true {\n\t\t@include _oGridShuffleColumns($layout-name);\n\t}\n\n\t[data-o-grid-colspan~=\"#{$layout-name}0\"] {\n\t\tdisplay: none;\n\t}\n\n\t@for $colspan from 1 through $o-grid-columns {\n\t\t[data-o-grid-colspan~=\"#{$layout-name}#{$colspan}\"] {\n\t\t\t// scss-lint:disable DeclarationOrder\n\n\t\t\t// Restore visibility from `display: none`\n\t\t\t// if `data-o-grid-colspan` was set to `0` or `hide`\n\t\t\tdisplay: block;\n\n\t\t\t// Apply width in %\n\t\t\t@include _oGridFixSafariWrap($colspan);\n\t\t\tmin-width: oGridColspan($colspan);\n\t\t\tmax-width: oGridColspan($colspan);\n\t\t\twidth: oGridColspan($colspan);\n\t\t}\n\t}\n}\n\n/// Fix a bug in Safari where items wouldn't wrap properly\n/// @link https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrapping-flex-items\n@mixin _oGridFixSafariWrap($args...) {\n\tflex-basis: oGridColspan($args...);\n}\n\n/// Generate the grid with helper classes for:\n/// - older browsers (no columns, @media query support)\n/// - IE 8 (fixed layout, with columns)\n/// - modern browsers (fluid layout, with columns)\n@mixin oGridGenerate {\n\t// Basic layout styles\n\t.o-grid-container {\n\t\t@include oGridContainer($o-grid-mode);\n\t}\n\t.o-grid-container--bleed {\n\t\tpadding-left: 0;\n\t\tpadding-right: 0;\n\t}\n\t.o-grid-row {\n\t\t@include oGridRow;\n\t}\n\t[data-o-grid-colspan] {\n\t\t@include oGridColspan();\n\t}\n\n\n\t[data-o-grid-colspan~=\"0\"] {\n\t\tdisplay: none;\n\t}\n\t@for $colspan from 1 through $o-grid-columns {\n\t\t[data-o-grid-colspan~=\"#{$colspan}\"] {\n\t\t\t@include oGridColspan($colspan, $width-only: true);\n\t\t}\n\t}\n\n\t// Compact, gutterless row of columns\n\t.o-grid-row--compact {\n\t\tmargin-left: 0;\n\n\t\t> [data-o-grid-colspan] {\n\t\t\tpadding-left: 0;\n\t\t}\n\t}\n\n\t@if $o-grid-human-friendly-selectors == true {\n\t\t// one-half, one-third, three-quarters, center, uncenter…\n\t\t@include _oGridHumanFriendlyKeywords;\n\t}\n\n\t@if $o-grid-shuffle-selectors == true {\n\t\t// pull, push, offset\n\t\t@include _oGridShuffleColumns;\n\t}\n\n\t// For IE 8, output grid helper classes and data- attributes\n\t// for the layout defined in $o-grid-fixed-layout\n\t@include oGridTargetIE8 {\n\t\t// Output grid modifiers for layouts up to the fixed layout displayed by IE8\n\t\t$last-layout-index: index($_o-grid-layout-names, $o-grid-fixed-layout);\n\t\t@for $index from 1 through $last-layout-index {\n\t\t\t@include _oGridModifiersForLayout(nth($_o-grid-layout-names, $index));\n\t\t}\n\t}\n\n\t// In browsers that support @media queries,\n\t// output grid helper classes and data- attributes for all layouts\n\t@each $layout-name in $_o-grid-layout-names {\n\t\t@include oGridRespondTo($layout-name) {\n\t\t\t@include _oGridModifiersForLayout($layout-name);\n\t\t}\n\t}\n}\n","////\n/// @group o-grid\n/// @link http://registry.origami.ft.com/components/o-grid\n////\n\n// ----------------------------------------------------------------------------\n// Responsive behaviour configuration\n// ----------------------------------------------------------------------------\n\n/// Silent mode\n///\n/// @type Bool\n///\n/// @link http://origami.ft.com/docs/syntax/scss/#silent-styles \"Silent\" styles in Origami's documentation\n$o-grid-is-silent: true !default;\n\n\n/// Offset, push and pull selectors\n///\n/// @type Bool\n///\n/// Toggle outputting offset, push and pull selectors\n$o-grid-shuffle-selectors: true !default;\n\n/// Human-friendly selectors\n///\n/// @type Bool\n///\n/// Toggle outputting offset, push and pull selectors\n$o-grid-human-friendly-selectors: true !default;\n\n\n/// Grid mode\n/// - fluid: full width up to the largest layout's width\n/// - snappy: fluid width until the layout defined in $o-grid-start-snappy-mode-at (default: M),\n///           and then snaps into a larger fixed layout at each breakpoint\n/// - fixed: always fixed-width with the layout defined by $o-grid-fixed-layout (default: L)\n///\n/// @type String - one of fluid (default), snappy, fixed\n$o-grid-mode: 'fluid' !default;\n\n/// Layout to default to when the grid has a fixed width (not fluid)\n///\n/// @type String - One of $o-grid-layouts\n$o-grid-fixed-layout: 'L' !default;\n\n/// When the grid start snapping between fixed-width layouts\n/// in the case where a row has the `o-grid-row--snappy` class\n///\n/// @type String\n$o-grid-start-snappy-mode-at: 'M' !default;\n\n/// Show the currently active breakpoint and output loaded settings\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @type Bool\n$o-grid-debug-mode: false !default;\n\n/// Output IE 8-specific rules?\n/// - false: no IE8 support at all\n/// - 'only': serve code compatible with IE8 only\n/// - 'inline' (default): serve IE8 specific code alongside modern browsers code\n///\n/// @type Bool | String\n$o-grid-ie8-rules: 'inline' !default;\n\n\n// ----------------------------------------------------------------------------\n// Grid settings and dimensions\n// ----------------------------------------------------------------------------\n\n/// Number of columns\n///\n/// @type Number (unitless)\n$o-grid-columns: 12 !default;\n\n/// Minimum width, in pixels\n///\n/// @type Number\n$o-grid-min-width: 240px !default;\n\n/// Layouts\n///\n/// Each layout is calculated following a specific column width,\n/// in order to base breakpoints on the structure of the grid itself\n///\n/// @type Map\n$o-grid-layouts: (\n\tS:  490px,  // column-width: 30px, inner width: 470px\n\tM:  740px,  // column-width: 40px, inner width: 700px\n\tL:  980px,  // column-width: 60px, inner width: 940px\n\tXL: 1220px, // column-width: 80px, inner width: 1180px\n) !default;\n\n/// Layout names\n///\n/// @access private\n/// @type List\n$_o-grid-layout-names: map-keys($o-grid-layouts);\n\n/// Gutter sizes\n///\n/// @type Map\n$o-grid-gutters: (\n\tdefault: 10px,\n\tM:       20px,\n) !default;\n\n// If layouts have changed but gutters haven't,\n// prune non-existant layouts.\n@each $layout-name, $gutter-size in $o-grid-gutters {\n\t@if ($layout-name != 'default') and (not map-has-key($o-grid-layouts, $layout-name)) {\n\t\t$o-grid-gutters: map-remove($o-grid-gutters, $layout-name);\n\t}\n}\n\n/// Maximum grid width\n/// Defaults to the largest layout width\n///\n/// @access private\n/// @type Number\n$_o-grid-max-width: map-get($o-grid-layouts, nth($_o-grid-layout-names, -1));\n\n// When snappy mode is enabled, force $_o-grid-max-width to the largest layout width\n// instead of the default $_o-grid-max-width\n@if $o-grid-mode == 'snappy' {\n\t$_o-grid-max-width: map-get($o-grid-layouts, nth($_o-grid-layout-names, -1)) !global;\n}\n\n/// Current scope\n///\n/// @access private\n/// @type String\n$_o-grid-scope: 'global';\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","@if $o-header-is-silent == false {\n\n\t.o-header__anon {\n\t\ttext-align: center;\n\n\t\t@include oGridRespondTo('L') {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.o-header__anon-list {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t.o-header__anon-item {\n\t\t@include oHeaderItemSeparator();\n\t\tdisplay: inline-block;\n\t}\n\n\t.o-header__anon-link {\n\t\t@include oHeaderLink();\n\t\t@include oHeaderFancyLink();\n\t}\n\n}\n","////\n/// @group o-header\n/// @link http://registry.origami.ft.com/components/o-header\n////\n\n/// Base styles for header links\n@mixin oHeaderLink() {\n\tcolor: inherit;\n\ttext-decoration: none;\n\tborder: 0;\n\n\t&:hover {\n\t\tcolor: oColorsGetColorFor('o-header-link-hover', 'text');\n\t}\n\n\t&--highlight,\n\t&[aria-selected=\"true\"] {\n\t\tcolor: oColorsGetColorFor('o-header-link-highlight', 'text');\n\t}\n}\n\n/// More visually decorated link styles\n@mixin oHeaderFancyLink() {\n\tposition: relative;\n\tdisplay: block;\n\tpadding: $_o-header-padding-y 0;\n\n\t&:after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 3px;\n\t}\n\n\t&:hover:after {\n\t\t$bg: oColorsGetColorFor('o-header-link-hover', 'background');\n\t\t@include oEffectsBackgroundsPinStripe(mix($bg, white, 30%), $bg);\n\t}\n\n\t&--highlight:after,\n\t&[aria-selected=\"true\"]:after {\n\t\t$bg: oColorsGetColorFor('o-header-link-highlight', 'background');\n\t\t@include oEffectsBackgroundsPinStripe(mix($bg, white, 50%), $bg);\n\t}\n}\n\n/// Horizontal list item separator\n@mixin oHeaderItemSeparator() {\n\t$border-width: 1px;\n\n\t& + & {\n\t\tposition: relative;\n\t\tmargin-left: $_o-header-padding-x - $border-width;\n\t\tpadding-left: $_o-header-padding-x;\n\n\t\t&:before {\n\t\t\tcontent: '';\n\t\t\tposition: absolute;\n\t\t\ttop: 15%;\n\t\t\tleft: 0;\n\t\t\theight: 70%;\n\t\t\tborder-left: $border-width solid oColorsGetColorFor('o-header', 'border');\n\t\t}\n\t}\n}\n\n/// Calculate logo dimensions for the given breakpoint\n///\n/// @param {String} $breakpoint - XS, S, M, L or XL\n@mixin oHeaderLogoSize($breakpoint) {\n\t$image-aspect-ratio: 25 / 2;\n\t$logo-heights: ('XS': 16, 'S': 20, 'M': 24, 'L': 40, 'XL': 40);\n\n\twidth: map-get($logo-heights, $breakpoint) * $image-aspect-ratio + 0px;\n\theight: map-get($logo-heights, $breakpoint) + 0px;\n}\n\n/// Construct a logo image URL\n///\n/// @param {String} $logo-name\n/// @param {Color} $color\n/// @param {Number} $fallback-width\n@mixin oHeaderBrandImage($logo-name, $color, $fallback-width) {\n\t$base-url: 'https://image.webservices.ft.com/v1/images/raw/ftlogo:';\n\t$color: str-slice(ie-hex-str($color), 4);\n\n\tbackground-image: url($base-url + $logo-name + \"?source=o-header&tint=%23#{$color},%23#{$color}&format=svg\");\n\tbackground-image: url($base-url + $logo-name + \"?source=o-header&tint=%23#{$color},%23#{$color}&format=png&width=#{$fallback-width}\") \\9;\n}\n","$o-header-is-silent: true !default;\n\n$_o-header-padding-x: 12px;\n$_o-header-padding-y: 12px;\n$_o-header-buttons-theme: 'standout';\n$_o-header-mega-padding-x: 24px;\n$_o-header-mega-padding-y: 18px;\n$_o-header-mega-z-index: 1;\n","////\n/// @group o-effects backgrounds\n////\n\n/// Pin stripe\n/// @param {Color} $background\n/// @param {Color} $foreground\n/// @param {String} $style - 'dense' or 'sparse'\n/// @output A repeating linear gradient background\n@mixin oEffectsBackgroundsPinStripe($background: gray, $foreground: rgba(0, 0, 0, 0.2), $style: 'dense') {\n\tbackground-color: $background;\n\n\t// complex: These values have been very carefully chosen to minimise the appearence of\n\t// strobing on a variety of screens.\n\t// complex: The background size has been calculated to reduce rounding errors.\n\t@if $style == 'dense' {\n\t\tbackground-image: repeating-linear-gradient(\n\t\t\t135deg,\n\t\t\t$foreground 0,\n\t\t\t$foreground 1.5px,\n\t\t\ttransparent 1.5px,\n\t\t\ttransparent 3px\n\t\t);\n\t\tbackground-size: 4px 4px;\n\t}\n\n\t@if $style == 'sparse' {\n\t\tbackground-image: repeating-linear-gradient(\n\t\t\t135deg,\n\t\t\ttransparent 0,\n\t\t\ttransparent 1px,\n\t\t\t$foreground 1px,\n\t\t\t$foreground 2px,\n\t\t\ttransparent 2px,\n\t\t\ttransparent 5px\n\t\t);\n\t\tbackground-size: 7px 7px;\n\t}\n}\n","@if $o-header-is-silent == false {\n\n\t.o-header__top {}\n\n\t.o-header__top-wrapper {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t}\n\n\t.o-header__top-column {\n\t\tdisplay: table-cell;\n\t\tvertical-align: middle;\n\t}\n\n\t.o-header__top-column--left,\n\t.o-header__top-column--right {\n\t\t// to keep the logo horizontally centered relative to the page these columns must be equal...\n\t\t// I think this is easier than removing them from layout with absolute positioning etc.\n\t\t// anyway, it's rock solid.\n\t\twidth: 0;\n\t\twhite-space: nowrap;\n\t}\n\n\t.o-header__top-column--left {\n\t\ttext-align: left;\n\t}\n\n\t.o-header__top-column--right {\n\t\ttext-align: right;\n\t\tdirection: rtl;\n\t}\n\n\t.o-header__top-column--center {\n\t\ttext-align: center;\n\t}\n\n\t.o-header__top-link {\n\t\t@include oHeaderLink();\n\t\tdisplay: inline-block;\n\t\tmargin-left: 10px;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 0.6em;\n\t\ttext-align: center;\n\n\t\t&:before {\n\t\t\t@include oIconsBaseStyles();\n\t\t\tcontent: ' ';\n\t\t\twidth: 20px;\n\t\t\theight: 20px;\n\t\t}\n\n\t\t@include oGridRespondTo('L') {\n\t\t\tmargin-left: 20px;\n\t\t\tfont-size: 0.8em;\n\n\t\t\t&:before {\n\t\t\t\twidth: 24px;\n\t\t\t\theight: 24px;\n\t\t\t}\n\t\t}\n\n\t\t// first child for old IE\n\t\t&:first-child {\n\t\t\tmargin-left: 0;\n\t\t}\n\t}\n\n\t.o-header__top-link--menu {\n\t\t&:before {\n\t\t\t// container size (24) is only included for the fallback image.\n\t\t\t// IE8 has a static stylesheet generated for the L breakpoint.\n\t\t\t@include oIconsGetIcon('hamburger', oColorsGetColorFor('o-header-icon'), 24, $apply-base-styles: false, $apply-width-height: false);\n\t\t}\n\t}\n\n\t.o-header__top-link--search {\n\t\t&:before {\n\t\t\t@include oIconsGetIcon('search', oColorsGetColorFor('o-header-icon'), 24, $apply-base-styles: false, $apply-width-height: false);\n\t\t}\n\n\t\t// when used in tandem with the menu toggle, hide this on smaller screen sizes\n\t\t.o-header__top-link--menu + & {\n\t\t\t@include oGridRespondTo($until: 'L') {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t}\n\n\t.o-header__top-link--myft {\n\t\t&:before {\n\t\t\t@include oHeaderBrandImage('brand-myft', oColorsGetColorFor('o-header-icon'), 52);\n\t\t\t// this is not a very square icon\n\t\t\twidth: 35px;\n\n\t\t\t@include oGridRespondTo('M') {\n\t\t\t\twidth: 44px;\n\t\t\t}\n\n\t\t\t@include oGridRespondTo('L') {\n\t\t\t\twidth: 52px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.o-header__top-link-label {\n\t\tdisplay: block;\n\t\tmargin-top: 2px;\n\n\t\t@include oGridRespondTo('L') {\n\t\t\tmargin-top: 4px;\n\t\t}\n\t}\n\n\t.o-header__top-logo {\n\t\t@include oHeaderBrandImage('brand-ft-masthead', oColorsGetColorFor('o-header-icon'), 500);\n\t\t@include oHeaderLogoSize('XS');\n\n\t\tdisplay: block;\n\t\tborder: 0;\n\t\tmargin: 16px auto;\n\t\tbackground-size: contain;\n\t\tbackground-position: 50%;\n\t\tbackground-repeat: no-repeat;\n\n\t\t@include oGridRespondTo('S') {\n\t\t\t@include oHeaderLogoSize('S');\n\t\t\tmargin-top: 18px;\n\t\t\tmargin-bottom: 18px;\n\t\t}\n\n\t\t@include oGridRespondTo('M') {\n\t\t\t@include oHeaderLogoSize('M');\n\t\t\tmargin-top: 24px;\n\t\t\tmargin-bottom: 24px;\n\t\t}\n\n\t\t@include oGridRespondTo('L') {\n\t\t\t@include oHeaderLogoSize('L');\n\t\t\tmargin-top: 30px;\n\t\t\tmargin-bottom: 30px;\n\t\t}\n\t}\n\n}\n","////\n/// @group o-icons\n/// @link http://registry.origami.ft.com/components/o-icons\n////\n\n/// Get an SVG icon with PNG fallback for ie6-8\n///\n/// @param {String} $icon-name - this should be a reference to an icon included in o-icons eg arrow-down\n/// @param {String} $color - this should be a hex colour value. Used to color the icon. We suggest using an o-colors an o-colors function.\n/// @param {String} $container-width - this is the width to set the icon containing element to. Defaults to 20px. This value is also used to request a PNG fallback of the right size from the image service.\n/// @param {String} $container-height - this is the height to set the icon containing element to. Defaults to null, and will use the value of $container-width\n/// @param {Bool} $apply-base-styles - defaults to true. If true, will output style rules for the container. If false will only output the background-image property\n/// @param {Bool} $apply-width-height - defaults to true. If true, will output the styles for the container width and height.\n@mixin oIconsGetIcon($icon-name, $color: null, $container-width: 128, $container-height: null, $apply-base-styles: true, $apply-width-height: true) {\n\t$service-url: $o-icons-service-base-url + \"/v1/images/raw/fticon:#{$icon-name}\";\n\t$query: \"?source=o-icons\";\n\n\t@if $color != null {\n\t\t$color: str-slice(ie-hex-str($color), 4);\n\t\t$query: $query + \"&tint=%23#{$color},%23#{$color}\";\n\t}\n\n\t@if ($o-icons-use-local-assets == true and $color == null) {\n\t\tbackground-image: url(oAssetsResolve(\"svg/#{$icon-name}.svg\", o-icons));\n\t} @else {\n\t\tbackground-image: url($service-url + $query + \"&format=svg\");\n\t}\n\n\t// ie7/8 fallback. Uses the `\\9` selector hack to target ie6-8.\n\t// Hack is documented here: http://browserhacks.com/#hack-ab1bcc7b3a6544c99260f7608f8e845e\n\t// It still needs to use the build service  <-- what does this comment mean?\n\tbackground-image: url($service-url + $query + \"&format=png&width=#{$container-width}\")\\9;\n\n\t// Prevents dimension styles being output by default.\n\t// Resolves issue where previous component `o-ft-icons` the mixin this replaces,\n\t// dimension styles were included within the $apply-base-styles block as well.\n\t@if ($apply-width-height == true) {\n\t\twidth: $container-width + 0px;\n\t\t@if ($container-height == null) {\n\t\t\t$container-height: $container-width;\n\t\t}\n\t\theight: $container-height + 0px;\n\t}\n\n\t@if ($apply-base-styles == true) {\n\t\t@include oIconsBaseStyles;\n\t}\n}\n\n/// Base styles for all icons\n@mixin oIconsBaseStyles() {\n\tdisplay: inline-block;\n\tbackground-repeat: no-repeat;\n\t// Doesn't work in ie8/7/6 in these cases the icon will fill the available space,\n\t// which is fine if the containing box is the same shape as the icon (which they mostly will be)\n\tbackground-size: contain;\n\tbackground-position: 50%;\n\tbackground-color: transparent;\n\tvertical-align: baseline;\n}\n","@if $o-header-is-silent == false {\n\n\t.o-header__search {\n\t\tpadding: $_o-header-padding-y 0;\n\t\ttext-align: center;\n\t\tbackground: oColorsGetColorFor('o-header-search', 'background');\n\n\t\t&[aria-hidden=\"false\"] {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t[data-o-header-search] {\n\t\tdisplay: none;\n\t}\n\n\t.o-header__search-form {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tmax-width: 640px;\n\t\tmargin: 0 auto;\n\t}\n\n\t.o-header__search-term,\n\t.o-header__search-submit {\n\t\t// This is mostly for <= IE9, flexbox should deal with everything else\n\t\tline-height: normal;\n\t\tbox-sizing: border-box;\n\t\theight: 32px;\n\t\tvertical-align: middle;\n\t}\n\n\t.o-header__search-term {\n\t\t// match o-buttons\n\t\t@include oButtonsSize('medium');\n\t\tborder-radius: $_o-buttons-border-radius;\n\t\t// normalize\n\t\tbackground: white;\n\t\tborder-style: solid;\n\t\tborder-color: transparent;\n\t\t// oh, webkit...\n\t\tbox-shadow: none;\n\t\t// fill!\n\t\tmin-width: 50%;\n\t\tflex-grow: 1;\n\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t\tborder-color: oColorsGetColorFor('o-header-search', 'border');\n\t\t}\n\t}\n\n\t.o-header__search-submit {\n\t\t@include oButtons($theme: $_o-header-buttons-theme);\n\t\tmargin-left: $_o-header-padding-x;\n\t}\n\n\t.o-header__search-close {\n\t\t@include oIconsGetIcon('cross', white, 20);\n\t\tborder: 0;\n\t\tmargin-left: $_o-header-padding-x * 2;\n\n\t\t@include oGridRespondTo($until: 'M') {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n}\n",".o-header {\n  color: #505050; }\n\n.o-header__row {\n  border-bottom: 1px solid #cec6b9; }\n\n.o-header__container {\n  position: relative;\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n  min-width: 240px;\n  max-width: 1220px;\n  max-width: 1220px;\n  padding-left: 10px;\n  padding-right: 10px; }\n  @media (min-width: 46.25em) {\n    .o-header__container {\n      padding-left: 20px;\n      padding-right: 20px; } }\n  @media (min-width: 46.25em) {\n    .o-grid-snappy .o-header__container, .o-header__container--snappy {\n      max-width: 740px; } }\n  @media (min-width: 61.25em) {\n    .o-grid-snappy .o-header__container, .o-header__container--snappy {\n      max-width: 980px; } }\n  @media (min-width: 76.25em) {\n    .o-grid-snappy .o-header__container, .o-header__container--snappy {\n      max-width: 1220px; } }\n  @media \\0screen {\n    .o-header__container {\n      padding-left: 20px;\n      padding-right: 20px;\n      width: 980px; } }\n  .o-header__container:before, .o-header__container:after {\n    content: '';\n    display: table; }\n  .o-header__container:after {\n    clear: both; }\n\n.o-header__visually-hidden {\n  position: absolute;\n  clip: rect(0 0 0 0);\n  margin: -1px;\n  border: 0;\n  overflow: hidden;\n  padding: 0;\n  width: 1px;\n  height: 1px; }\n\n.o-header__anon {\n  text-align: center; }\n  @media (min-width: 61.25em) {\n    .o-header__anon {\n      display: none; } }\n\n.o-header__anon-list {\n  margin: 0;\n  padding: 0; }\n\n.o-header__anon-item {\n  display: inline-block; }\n  .o-header__anon-item + .o-header__anon-item {\n    position: relative;\n    margin-left: 11px;\n    padding-left: 12px; }\n    .o-header__anon-item + .o-header__anon-item:before {\n      content: '';\n      position: absolute;\n      top: 15%;\n      left: 0;\n      height: 70%;\n      border-left: 1px solid #cec6b9; }\n\n.o-header__anon-link {\n  color: inherit;\n  text-decoration: none;\n  border: 0;\n  position: relative;\n  display: block;\n  padding: 12px 0; }\n  .o-header__anon-link:hover {\n    color: #333333; }\n  .o-header__anon-link--highlight, .o-header__anon-link[aria-selected=\"true\"] {\n    color: #27757b; }\n  .o-header__anon-link:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 3px; }\n  .o-header__anon-link:hover:after {\n    background-color: #e0e0e0;\n    background-image: repeating-linear-gradient(135deg, #999999 0, #999999 1.5px, transparent 1.5px, transparent 3px);\n    background-size: 4px 4px; }\n  .o-header__anon-link--highlight:after, .o-header__anon-link[aria-selected=\"true\"]:after {\n    background-color: #93babd;\n    background-image: repeating-linear-gradient(135deg, #27757b 0, #27757b 1.5px, transparent 1.5px, transparent 3px);\n    background-size: 4px 4px; }\n\n.o-header__top-wrapper {\n  display: table;\n  table-layout: fixed;\n  width: 100%; }\n\n.o-header__top-column {\n  display: table-cell;\n  vertical-align: middle; }\n\n.o-header__top-column--left,\n.o-header__top-column--right {\n  width: 0;\n  white-space: nowrap; }\n\n.o-header__top-column--left {\n  text-align: left; }\n\n.o-header__top-column--right {\n  text-align: right;\n  direction: rtl; }\n\n.o-header__top-column--center {\n  text-align: center; }\n\n.o-header__top-link {\n  color: inherit;\n  text-decoration: none;\n  border: 0;\n  display: inline-block;\n  margin-left: 10px;\n  text-transform: uppercase;\n  font-size: 0.6em;\n  text-align: center; }\n  .o-header__top-link:hover {\n    color: #333333; }\n  .o-header__top-link--highlight, .o-header__top-link[aria-selected=\"true\"] {\n    color: #27757b; }\n  .o-header__top-link:before {\n    display: inline-block;\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: 50%;\n    background-color: transparent;\n    vertical-align: baseline;\n    content: ' ';\n    width: 20px;\n    height: 20px; }\n  @media (min-width: 61.25em) {\n    .o-header__top-link {\n      margin-left: 20px;\n      font-size: 0.8em; }\n      .o-header__top-link:before {\n        width: 24px;\n        height: 24px; } }\n  .o-header__top-link:first-child {\n    margin-left: 0; }\n\n.o-header__top-link--menu:before {\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:hamburger?source=o-icons&tint=%23505050,%23505050&format=svg\");\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:hamburger?source=o-icons&tint=%23505050,%23505050&format=png&width=24\") \\9; }\n\n.o-header__top-link--search:before {\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:search?source=o-icons&tint=%23505050,%23505050&format=svg\");\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:search?source=o-icons&tint=%23505050,%23505050&format=png&width=24\") \\9; }\n\n@media (max-width: 61.24em) {\n  .o-header__top-link--menu + .o-header__top-link--search {\n    display: none; } }\n\n.o-header__top-link--myft:before {\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/ftlogo:brand-myft?source=o-header&tint=%23505050,%23505050&format=svg\");\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/ftlogo:brand-myft?source=o-header&tint=%23505050,%23505050&format=png&width=52\") \\9;\n  width: 35px; }\n  @media (min-width: 46.25em) {\n    .o-header__top-link--myft:before {\n      width: 44px; } }\n  @media (min-width: 61.25em) {\n    .o-header__top-link--myft:before {\n      width: 52px; } }\n\n.o-header__top-link-label {\n  display: block;\n  margin-top: 2px; }\n  @media (min-width: 61.25em) {\n    .o-header__top-link-label {\n      margin-top: 4px; } }\n\n.o-header__top-logo {\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/ftlogo:brand-ft-masthead?source=o-header&tint=%23505050,%23505050&format=svg\");\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/ftlogo:brand-ft-masthead?source=o-header&tint=%23505050,%23505050&format=png&width=500\") \\9;\n  width: 200px;\n  height: 16px;\n  display: block;\n  border: 0;\n  margin: 16px auto;\n  background-size: contain;\n  background-position: 50%;\n  background-repeat: no-repeat; }\n  @media (min-width: 30.625em) {\n    .o-header__top-logo {\n      width: 250px;\n      height: 20px;\n      margin-top: 18px;\n      margin-bottom: 18px; } }\n  @media (min-width: 46.25em) {\n    .o-header__top-logo {\n      width: 300px;\n      height: 24px;\n      margin-top: 24px;\n      margin-bottom: 24px; } }\n  @media (min-width: 61.25em) {\n    .o-header__top-logo {\n      width: 500px;\n      height: 40px;\n      margin-top: 30px;\n      margin-bottom: 30px; } }\n\n.o-header__search {\n  padding: 12px 0;\n  text-align: center;\n  background: #cec6b9; }\n  .o-header__search[aria-hidden=\"false\"] {\n    display: block; }\n\n[data-o-header-search] {\n  display: none; }\n\n.o-header__search-form {\n  display: flex;\n  align-items: center;\n  max-width: 640px;\n  margin: 0 auto; }\n\n.o-header__search-term,\n.o-header__search-submit {\n  line-height: normal;\n  box-sizing: border-box;\n  height: 32px;\n  vertical-align: middle; }\n\n.o-header__search-term {\n  background-size: 16px;\n  min-height: 26px;\n  min-width: 26px;\n  padding: 4px 8px 4px 8px;\n  font-size: 16px;\n  line-height: 16px;\n  border-width: 1px;\n  border-radius: 3px;\n  background: white;\n  border-style: solid;\n  border-color: transparent;\n  box-shadow: none;\n  min-width: 50%;\n  flex-grow: 1; }\n  .o-header__search-term:focus {\n    outline: none;\n    border-color: #27757b; }\n\n.o-header__search-submit {\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: middle;\n  margin: 0;\n  outline: 0;\n  border-style: solid;\n  text-align: center;\n  text-decoration: none;\n  font-family: MetricWeb, sans-serif;\n  font-weight: 600;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  user-select: none;\n  background-clip: padding-box;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-size: 16px;\n  min-height: 26px;\n  min-width: 26px;\n  padding: 4px 8px 4px 8px;\n  font-size: 16px;\n  line-height: 16px;\n  border-width: 1px;\n  color: #ffffff;\n  background-color: #27757b;\n  border-color: #27757b;\n  text-transform: uppercase;\n  margin-left: 12px; }\n  .o-header__search-submit[aria-selected=true], .o-header__search-submit[aria-pressed=true] {\n    color: #1d1d1d;\n    background-color: #2bbbbf !important;\n    border-color: #2bbbbf; }\n  .o-header__search-submit[disabled] {\n    color: #27757b;\n    background-color: #ffffff;\n    border-color: #27757b; }\n  .o-header__search-submit:not([disabled]):focus:not(:hover),\n  .o-hoverable-on .o-header__search-submit:not([disabled]):hover {\n    color: #ffffff;\n    background-color: #2c8389;\n    border-color: #2bbbbf; }\n  .o-header__search-submit:not([disabled]):active {\n    color: #cccccc; }\n  .o-header__search-submit[disabled] {\n    pointer-events: none;\n    opacity: 0.4;\n    cursor: default; }\n  .o-header__search-submit::-moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\n.o-header__search-close {\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:cross?source=o-icons&tint=%23FFFFFF,%23FFFFFF&format=svg\");\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:cross?source=o-icons&tint=%23FFFFFF,%23FFFFFF&format=png&width=20\") \\9;\n  width: 20px;\n  height: 20px;\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: 50%;\n  background-color: transparent;\n  vertical-align: baseline;\n  border: 0;\n  margin-left: 24px; }\n  @media (max-width: 46.24em) {\n    .o-header__search-close {\n      display: none; } }\n\n.o-header__nav {\n  font-family: MetricWeb, sans-serif;\n  line-height: 17px;\n  font-size: 15px;\n  font-weight: 400; }\n\n.o-header__nav--mobile {\n  white-space: nowrap;\n  background-color: #fdf8f2; }\n  @media (min-width: 61.25em) {\n    .o-header__nav--mobile {\n      display: none; } }\n\n.o-header__nav--desktop {\n  display: none; }\n  @media (min-width: 61.25em) {\n    .o-header__nav--desktop {\n      display: block; } }\n  @media (min-width: 76.25em) {\n    .o-header__nav--desktop {\n      font-size: 18px; } }\n\n.o-header__nav-list {\n  display: table;\n  margin: 0 auto;\n  padding: 0; }\n\n.o-header__nav-list--left {\n  float: left; }\n\n.o-header__nav-list--right {\n  float: right; }\n\n.o-header__nav-item {\n  display: table-cell;\n  vertical-align: middle; }\n  .o-header__nav-item:first-child {\n    padding-left: 0 !important; }\n  .o-header__nav--mobile .o-header__nav-item {\n    padding-left: 24px; }\n  .o-header__nav--desktop .o-header__nav-item {\n    padding-left: 12px; }\n\n.o-header__nav-link {\n  color: inherit;\n  text-decoration: none;\n  border: 0;\n  position: relative;\n  display: block;\n  padding: 12px 0; }\n  .o-header__nav-link:hover {\n    color: #333333; }\n  .o-header__nav-link--highlight, .o-header__nav-link[aria-selected=\"true\"] {\n    color: #27757b; }\n  .o-header__nav-link:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 3px; }\n  .o-header__nav-link:hover:after {\n    background-color: #e0e0e0;\n    background-image: repeating-linear-gradient(135deg, #999999 0, #999999 1.5px, transparent 1.5px, transparent 3px);\n    background-size: 4px 4px; }\n  .o-header__nav-link--highlight:after, .o-header__nav-link[aria-selected=\"true\"]:after {\n    background-color: #93babd;\n    background-image: repeating-linear-gradient(135deg, #27757b 0, #27757b 1.5px, transparent 1.5px, transparent 3px);\n    background-size: 4px 4px; }\n\n.o-header__nav-link--primary {\n  font-weight: bold;\n  text-transform: uppercase;\n  -webkit-font-smoothing: antialiased; }\n\n.o-header__nav-button {\n  display: inline-block;\n  box-sizing: border-box;\n  vertical-align: middle;\n  margin: 0;\n  outline: 0;\n  border-style: solid;\n  text-align: center;\n  text-decoration: none;\n  font-family: MetricWeb, sans-serif;\n  font-weight: 600;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  user-select: none;\n  background-clip: padding-box;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-size: 16px;\n  min-height: 26px;\n  min-width: 26px;\n  padding: 4px 8px 4px 8px;\n  font-size: 16px;\n  line-height: 16px;\n  border-width: 1px;\n  color: #ffffff;\n  background-color: #27757b;\n  border-color: #27757b;\n  text-transform: uppercase; }\n  .o-header__nav-button[aria-selected=true], .o-header__nav-button[aria-pressed=true] {\n    color: #1d1d1d;\n    background-color: #2bbbbf !important;\n    border-color: #2bbbbf; }\n  .o-header__nav-button[disabled] {\n    color: #27757b;\n    background-color: #ffffff;\n    border-color: #27757b; }\n  .o-header__nav-button:not([disabled]):focus:not(:hover),\n  .o-hoverable-on .o-header__nav-button:not([disabled]):hover {\n    color: #ffffff;\n    background-color: #2c8389;\n    border-color: #2bbbbf; }\n  .o-header__nav-button:not([disabled]):active {\n    color: #cccccc; }\n  .o-header__nav-button[disabled] {\n    pointer-events: none;\n    opacity: 0.4;\n    cursor: default; }\n  .o-header__nav-button::-moz-focus-inner {\n    border: 0;\n    padding: 0; }\n\n@keyframes o-header-mega {\n  0% {\n    opacity: 0; }\n  100% {\n    opacity: 1; } }\n\n.o-header__mega {\n  line-height: 17px;\n  font-size: 15px;\n  box-shadow: 0 10px 20px rgba(80, 80, 80, 0.18), 0 6px 6px rgba(80, 80, 80, 0.22);\n  display: none;\n  position: absolute;\n  top: 100%;\n  left: 20px;\n  right: 20px;\n  z-index: 1;\n  box-sizing: border-box;\n  padding: 18px 0;\n  border-top: 1px solid #cec6b9;\n  background-color: #fdf8f2; }\n  .o-header__mega[aria-expanded=\"true\"],\n  [data-o-header--no-js] :hover > .o-header__mega {\n    display: block; }\n\n.o-header__mega--animation {\n  animation: o-header-mega 0.5s ease-out; }\n\n.o-header__mega-wrapper {\n  display: table;\n  table-layout: fixed;\n  width: 100%;\n  border-spacing: 24px 0;\n  margin-left: -24px; }\n\n.o-header__mega-column {\n  display: table-cell;\n  padding-left: 24px;\n  border-left: 1px solid #cec6b9; }\n  .o-header__mega-column:first-child {\n    border-left: 0;\n    padding-left: 0; }\n\n.o-header__mega-heading {\n  margin: 0 0 12px;\n  font-size: inherit;\n  text-transform: uppercase; }\n\n.o-header__mega-list {\n  margin: 0;\n  padding: 0;\n  list-style: none; }\n\n.o-header__mega-item {\n  line-height: 1.5; }\n\n.o-header__mega-link {\n  color: inherit;\n  text-decoration: none;\n  border: 0; }\n  .o-header__mega-link:hover {\n    color: #333333; }\n  .o-header__mega-link--highlight, .o-header__mega-link[aria-selected=\"true\"] {\n    color: #27757b; }\n  .o-header__mega-link:hover {\n    text-decoration: underline; }\n\n.o-header__mega-column--articles .o-header__mega-item:before {\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:arrow-right?source=o-icons&tint=%239E2F50,%239E2F50&format=svg\");\n  background-image: url(\"https://image.webservices.ft.com/v1/images/raw/fticon:arrow-right?source=o-icons&tint=%239E2F50,%239E2F50&format=png&width=10\") \\9;\n  width: 10px;\n  height: 10px;\n  display: inline-block;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: 50%;\n  background-color: transparent;\n  vertical-align: baseline;\n  content: ''; }\n\n.o-header__mega-column--articles .o-header__mega-link {\n  white-space: none; }\n\n.o-header__mega-column--subsections {\n  width: 30%; }\n  .o-header__mega-column--subsections .o-header__mega-list {\n    columns: 2; }\n  .o-header__mega-column--subsections .o-header__mega-item:first-child {\n    font-weight: bold; }\n","////\n/// @group o-buttons\n/// @link http://registry.origami.ft.com/components/o-buttons\n////\n\n/// Button size\n/// Ouputs dimensions for a specific button size\n///\n/// @example\n/// .my-button--big {\n/// \t@include oButtonsSize(big);\n/// }\n///\n/// @param {String} $size\n@mixin oButtonsSize($size) {\n\t$button-dimensions: map-get($o-buttons-sizes, $size);\n\t$border-width: map-get($button-dimensions, border-width);\n\t$vertical-padding: 1/2 * (map-get($button-dimensions, min-height) - map-get($button-dimensions, font-size)) - $border-width;\n\n\tbackground-size: map-get($button-dimensions, background-size);\n\tmin-height: map-get($button-dimensions, min-height);\n\tmin-width: map-get($button-dimensions, min-width);\n\tpadding: $vertical-padding map-get($button-dimensions, padding-right) $vertical-padding map-get($button-dimensions, padding-left);\n\tfont-size: map-get($button-dimensions, font-size);\n\tline-height: map-get($button-dimensions, min-height) - $border-width * 2 - $vertical-padding * 2;\n\tborder-width: $border-width;\n}\n\n// Properties for a state of a given theme\n//\n// @param {String} $state - One of normal, hover, focus, selected, disabled, pressed\n@mixin _oButtonsPropertiesForState($theme, $state) {\n\t@if _oButtonsThemeHasState($theme, $state) {\n\t\t$states: map-get($o-buttons-themes, $theme);\n\n\t\t@each $property, $value in map-get($states, $state) {\n\t\t\t#{$property}: #{$value};\n\t\t}\n\t}\n}\n\n/// Button theme construct\n/// Ouputs styles for all button states\n///\n/// @example\n/// .my-button--standout {\n/// \t@include oButtonsTheme(standout);\n/// }\n///\n/// @param {String} $theme\n@mixin oButtonsTheme($theme) {\n\t@include _oButtonsPropertiesForState($theme, normal);\n\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed\n\t&[aria-selected=true], // e.g. A selected tab or page number in pagination\n\t&[aria-pressed=true] { // e.g. A \"follow\" button that is pressed\n\t\t@include _oButtonsPropertiesForState($theme, pressedselected);\n\t}\n\n\t&[disabled] {\n\t\t@include _oButtonsPropertiesForState($theme, disabled);\n\t}\n\n\t&:not([disabled]) {\n\t\t&:focus:not(:hover),\n\t\t#{$o-hoverable-if-hover-enabled} &:hover {\n\t\t\t@include _oButtonsPropertiesForState($theme, hover);\n\t\t}\n\t\t&:active {\n\t\t\t@include _oButtonsPropertiesForState($theme, active);\n\t\t}\n\t}\n\t&:focus:not(:active):not(:hover) {\n\t\t@include _oButtonsPropertiesForState($theme, focus);\n\t}\n}\n\n/// Button construct\n/// Basic button styling and default states for specific theme and size\n///\n/// @example Base styles\n///  .my-button {\n///  \t@include oButtons;\n///  }\n/// @example Custom theme\n///  .my-inverse-button {\n///  \t@include oButtons($theme: inverse);\n///  }\n/// @example Custom size\n///  .my-big-button {\n///  \t@include oButtons(big);\n///  }\n/// @example Custom size and theme\n///  .my-big-standout-button {\n///  \t@include oButtons(big, standout);\n///  }\n///\n/// @param {String} $size (medium)\n/// @param {String} $theme (standard)\n@mixin oButtons($size: medium, $theme: standard) {\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tvertical-align: middle;\n\tmargin: 0;\n\toutline: 0;\n\tborder-style: solid;\n\ttext-align: center;\n\ttext-decoration: none;\n\tfont-family: $o-buttons-font-family;\n\tfont-weight: $o-buttons-font-weight;\n\tborder-radius: $_o-buttons-border-radius;\n\tcursor: pointer;\n\ttransition: 0.3s background-color, 0.15s color ease-out, 0.15s border-color ease-out;\n\t-moz-appearance: none;\n\t-webkit-appearance: none;\n\tuser-select: none;\n\tbackground-clip: padding-box;\n\t// Prevent fat white type on a dark background\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\n\t@include oButtonsSize($size);\n\t@include oButtonsTheme($theme);\n\n\t// Same as aria-disabled:\n\t// http://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled\n\t// This is a common style for all button themes\n\t&[disabled] {\n\t\tpointer-events: none;\n\t\topacity: 0.4;\n\t\tcursor: default;\n\t}\n\n\t// Remove extra padding in Firefox\n\t&::-moz-focus-inner {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t}\n}\n","////\n/// @group o-buttons\n/// @link http://registry.origami.ft.com/components/o-buttons\n////\n\n/// Silent mode: on (true) or off (false)\n/// Set to false to output default button classes\n///\n/// @type Boolean\n$o-buttons-is-silent: true !default;\n\n/// Default button class used when $o-buttons-is-silent is true\n///\n/// @type String\n$o-buttons-class: o-buttons !default;\n\n/// Button font family\n///\n/// This is required to override default system form element styling,\n/// since `<input>`, `<button>`… don't inherit global font styles\n///\n/// @type String\n$o-buttons-font-family: MetricWeb, sans-serif !default;\n\n/// Button font weight\n///\n/// @type String\n$o-buttons-font-weight: 600 !default; // Semibold\n\n/// Button sizes, with their attached properties\n///\n/// @type Map\n$o-buttons-sizes: (\n\tsmall: (\n\t\tbackground-size: 12px,\n\t\tfont-size: 12px,\n\t\tmin-height: 22px,\n\t\tmin-width: 12px,\n\t\tpadding-left: 7px,\n\t\tpadding-right: 7px,\n\t\tborder-width: 1px,\n\t),\n\tmedium: (\n\t\tbackground-size: 16px,\n\t\tfont-size: 16px,\n\t\tmin-height: 26px,\n\t\tmin-width: 26px,\n\t\tpadding-left: 8px,\n\t\tpadding-right: 8px,\n\t\tborder-width: 1px,\n\t),\n\tbig: (\n\t\tbackground-size: 18px,\n\t\tfont-size: 18px,\n\t\tmin-height: 36px,\n\t\tmin-width: 36px,\n\t\tpadding-left: 18px,\n\t\tpadding-right: 18px,\n\t\tborder-width: 1px,\n\t)\n) !default;\n\n/// Border-radius\n///\n/// @type Number\n$_o-buttons-border-radius: 3px;\n\n/// Button themes, with their respective states\n/// Each state is a Map of CSS properties, find\n/// all theme definitions in _themes.scss\n///\n/// @type Map\n$o-buttons-themes: (\n\tstandard: $o-buttons-themes__standard,\n\tstandout: $o-buttons-themes__standout,\n\tinverse: $o-buttons-themes__inverse,\n\tuncolored: $o-buttons-themes__uncolored\n) !default;\n\n/// List of icons to generate classes for icon buttons.\n/// Build service users will only be able to use these icons, but there is\n/// a mixin for people using this via Sass, meaning any icon in 'o-ft-icons' is\n/// available to those users.\n/// Icon names as used in o-ft-icons\n///\n/// @type List\n$o-buttons-icons: \"arrow-left\", \"arrow-right\" !default;\n","@if $o-header-is-silent == false {\n\n\t.o-header__nav {\n\t\t@include oTypographySans('s');\n\t}\n\n\t.o-header__nav--mobile {\n\t\twhite-space: nowrap;\n\t\tbackground-color: oColorsGetColorFor('o-header-nav', 'background');\n\n\t\t@include oGridRespondTo('L') {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t.o-header__nav--desktop {\n\t\tdisplay: none;\n\n\t\t@include oGridRespondTo('L') {\n\t\t\tdisplay: block;\n\t\t}\n\n\t\t@include oGridRespondTo('XL') {\n\t\t\tfont-size: 18px;\n\t\t}\n\t}\n\n\t.o-header__nav-list {\n\t\tdisplay: table;\n\t\tmargin: 0 auto;\n\t\tpadding: 0;\n\t}\n\n\t.o-header__nav-list--left {\n\t\tfloat: left;\n\t}\n\n\t.o-header__nav-list--right {\n\t\tfloat: right;\n\t}\n\n\t.o-header__nav-item {\n\t\tdisplay: table-cell;\n\t\tvertical-align: middle;\n\n\t\t&:first-child {\n\t\t\tpadding-left: 0 !important;\n\t\t}\n\n\t\t.o-header__nav--mobile & {\n\t\t\tpadding-left: $_o-header-padding-x * 2;\n\t\t}\n\n\t\t.o-header__nav--desktop & {\n\t\t\tpadding-left: $_o-header-padding-x;\n\t\t}\n\t}\n\n\t.o-header__nav-link {\n\t\t@include oHeaderLink();\n\t\t@include oHeaderFancyLink();\n\t}\n\n\t.o-header__nav-link--primary {\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\t-webkit-font-smoothing: antialiased;\n\t}\n\n\t.o-header__nav-link--utility {}\n\n\t.o-header__nav-button {\n\t\t@include oButtons($theme: $_o-header-buttons-theme);\n\t}\n\n}\n","////\n/// @group Font system\n/// @link http://registry.origami.ft.com/components/o-typography\n////\n\n// Typographic matrix\n\n///\n/// Adjust size of sans\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySansSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySansSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(sans, $level));\n\tline-height: convert-to-px(get-line-height(sans, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(sans, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to sans and set the size / line-height\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySans(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySansSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySans($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(sans, $level);\n\t} @else {\n\t\tfont-family: $o-typography-sans;\n\t\t@include oTypographySansSize($level);\n\t}\n\tfont-weight: oFontsWeight(regular);\n}\n\n///\n/// Adjust size of sansBold\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySansBoldSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySansBoldSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(sansBold, $level));\n\tline-height: convert-to-px(get-line-height(sansBold, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(sansBold, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to sansBold and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySansBold(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySansBoldSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySansBold($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(sansBold, $level);\n\t} @else {\n\t\tfont-family: $o-typography-sans;\n\t\t@include oTypographySansBoldSize($level);\n\t}\n\tfont-weight: oFontsWeight(semibold);\n}\n\n///\n/// Adjust size of sansData\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySansDataSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySansDataSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(sansData, $level));\n\tline-height: convert-to-px(get-line-height(sansData, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(sansData, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to sansData and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySansData(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySansDataSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySansData($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(sansData, $level);\n\t} @else {\n\t\tfont-family: $o-typography-sans;\n\t\t@include oTypographySansDataSize($level);\n\t}\n\tfont-weight: oFontsWeight(regular);\n}\n\n///\n/// Adjust size of sansDataBold\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySansDataBoldSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySansDataBoldSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(sansDataBold, $level));\n\tline-height: convert-to-px(get-line-height(sansDataBold, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(sansDataBold, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to sansDataBold and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySansDataBold(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySansDataBoldSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySansDataBold($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(sansDataBold, $level);\n\t} @else {\n\t\tfont-family: $o-typography-sans;\n\t\t@include oTypographySansDataBoldSize($level);\n\t}\n\tfont-weight: oFontsWeight(semibold);\n}\n\n///\n/// Adjust size of sansDataItalic\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySansDataItalicSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySansDataItalicSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(sansDataItalic, $level));\n\tline-height: convert-to-px(get-line-height(sansDataItalic, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(sansDataItalic, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to sansDataItalic and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySansDataItalic(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySansDataItalicSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySansDataItalic($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(sansDataItalic, $level);\n\t} @else {\n\t\tfont-family: $o-typography-sans;\n\t\t@include oTypographySansDataItalicSize($level);\n\t}\n\tfont-weight: oFontsWeight(regular);\n\tfont-style: italic;\n}\n\n\n///\n/// Adjust size of serif\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySerifSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySerifSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(serif, $level));\n\tline-height: convert-to-px(get-line-height(serif, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(serif, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to serif and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySerif(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySerifSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySerif($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(serif, $level);\n\t} @else {\n\t\tfont-family: $o-typography-serif;\n\t\t@include oTypographySerifSize($level);\n\t}\n\tfont-weight: oFontsWeight(regular);\n}\n\n///\n/// Adjust size of serifBold\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySerifBoldSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySerifBoldSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(serifBold, $level));\n\tline-height: convert-to-px(get-line-height(serifBold, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(serifBold, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to serifBold and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySerifBold(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySerifBoldSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySerifBold($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(serifBold, $level);\n\t} @else {\n\t\tfont-family: $o-typography-serif;\n\t\t@include oTypographySerifBoldSize($level);\n\t}\n\tfont-weight: oFontsWeight(bold);\n}\n\n///\n/// Adjust size of serifItalic\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySerifItalicSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySerifItalicSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(serifItalic, $level));\n\tline-height: convert-to-px(get-line-height(serifItalic, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(serifItalic, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to serifItalic and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySerifItalic(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySerifItalicSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySerifItalic($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(serifItalic, $level);\n\t} @else {\n\t\tfont-family: $o-typography-serif;\n\t\t@include oTypographySerifItalicSize($level);\n\t}\n\tfont-style: italic;\n\tfont-weight: oFontsWeight(light);\n}\n\n///\n/// Adjust size of serifDisplay\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySerifDisplaySize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySerifDisplaySize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(serifDisplay, $level));\n\tline-height: convert-to-px(get-line-height(serifDisplay, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(serifDisplay, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to serifDisplay and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySerifDisplay(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySerifDisplaySize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySerifDisplay($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(serifDisplay, $level);\n\t} @else {\n\t\tfont-family: $o-typography-serif-display;\n\t\t@include oTypographySerifDisplaySize($level);\n\t}\n\tfont-weight: oFontsWeight(regular);\n}\n\n///\n/// Adjust size of serifDisplayBold\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySerifDisplayBoldSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySerifDisplayBoldSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(serifDisplayBold, $level));\n\tline-height: convert-to-px(get-line-height(serifDisplayBold, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(serifDisplayBold, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to serifDisplayBold and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySerifDisplayBold(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySerifDisplayBoldSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySerifDisplayBold($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(serifDisplayBold, $level);\n\t} @else {\n\t\tfont-family: $o-typography-serif-display;\n\t\t@include oTypographySerifDisplayBoldSize($level);\n\t}\n\tfont-weight: oFontsWeight(bold);\n}\n\n///\n/// Adjust size of serifDisplayItalic\n///\n/// @param {String} $level - Accepts xl, l, m, s, xs\n/// @param {Bool} $with-progressive-size [false] - Should it output the fallback font's scaled size\n///\n/// @example\n///  @include oTypographySerifDisplayItalicSize(xl, $with-progressive-size: true);\n///\n/// @requires {mixin} oTypographyFallbackFontSize\n/// @requires {function} convert-to-px\n/// @requires {function} get-font-size\n/// @requires {function} get-line-height\n///\n@mixin oTypographySerifDisplayItalicSize($level, $with-progressive-size: false) {\n\t$font-size: convert-to-px(get-font-size(serifDisplayItalic, $level));\n\tline-height: convert-to-px(get-line-height(serifDisplayItalic, $level));\n\t@if $with-progressive-size {\n\t\t@include oTypographyFallbackFontSize(serifDisplayItalic, $font-size);\n\t} @else {\n\t\tfont-size: $font-size;\n\t}\n}\n\n///\n/// Adjust the font to serifDisplayItalic and set the size / line-height\n/// @param {Bool} $load-progressively [false] - Should it load the font progressively\n///\n/// @example\n///  @include oTypographySerifDisplayItalic(xl, $load-progressively: true);\n///\n/// @requires {mixin} oTypographySerifDisplayItalicSize\n/// @requires {mixin} oTypographyProgressiveFont\n/// @requires {mixin} oFontsWeight\n///\n@mixin oTypographySerifDisplayItalic($level, $load-progressively: false) {\n\t@if $load-progressively {\n\t\t@include oTypographyProgressiveFont(serifDisplayItalic, $level);\n\t} @else {\n\t\tfont-family: $o-typography-serif-display;\n\t\t@include oTypographySerifDisplayItalicSize($level);\n\t}\n\tfont-style: italic;\n\tfont-weight: oFontsWeight(light);\n}\n","////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Check if a font variant exists for a family\n///\n/// @param {String} family - one of $o-fonts-families\n/// @param {String} weight\n/// @param {String} style\n///\n/// @access private\n///\n/// @return {Bool}\n@function _oFontsVariantExists($family, $weight, $style) {\n\t$font-properties: map-get($o-fonts-families, $family);\n\t$font-variants: map-get($font-properties, variants);\n\n\t@each $variant in $font-variants {\n\t\t// Check if this weight and style variant exists for this family\n\t\t// Known issue with LibSass 3.0.2 - https://github.com/sass/libsass/issues/741\n\t\t@if (map-get($variant, weight) == $weight and map-get($variant, style) == $style) {\n\t\t\t@return true;\n\t\t}\n\t}\n\t@return false;\n}\n\n/// Capitalise first letter of $string\n///\n/// @param {String} $string - string to update\n///\n/// @return {String}\n@function _oFontsStringCapitalise($string) {\n\t$string: $string + unquote(''); // Make sure $string has a type of String\n\t$first-letter: to-upper-case(str-slice($string, 0, 1));\n\t$rest-of-string: str-slice($string, 2);\n\n\t@return $first-letter + $rest-of-string;\n}\n\n/// Get a font-family stack with the appropriate fallbacks\n///\n/// @param {String} family\n///\n/// @return {String} - font-stack\n///\n/// @example scss\n/// font-family: oFontsGetFontFamilyWithFallbacks(FinancierDisplayWeb);\n@function oFontsGetFontFamilyWithFallbacks($family) {\n\t@if $family == 'Clarion' {\n\t\t@warn \"Clarion has been removed, use Georgia instead\";\n\t\t@return $o-fonts-serif;\n\t}\n\t@if map-has-key($o-fonts-families, $family) {\n\t\t$properties: map-get($o-fonts-families, $family);\n\t\t@return unquote(map-get($properties, font-family));\n\t}\n\t@warn 'Font #{$family} not found. Must be one of $o-fonts-families.';\n\t@return inherit;\n}\n\n/// Path to a font asset\n///\n/// @param {String} $asset\n///\n/// @return {String} - Path to the font asset, without the file extension\n@function oFontsUseAsset($asset) {\n\t@return $o-fonts-path + $asset;\n}\n\n/// Machine-readable CSS font-weight.\n///\n/// @param {String} $keyword - Human-readable keyword, one of $_o-fonts-weights\n///\n/// @example scss\n/// font-weight: oFontsWeight(lighter);\n///\n/// @return {Number} - CSS font-weight\n@function oFontsWeight($keyword) {\n\t@if map-has-key($_o-fonts-weights, $keyword) {\n\t\t@return map-get($_o-fonts-weights, $keyword);\n\t} @else {\n\t\t@warn 'Keyword \"#{$keyword}\" not found. Must be one of $_o-fonts-weights.';\n\t}\n}\n","////\n/// These helpers are taken from Guss Typography\n/// https://github.com/guardian/guss-typography/blob/master/_typography.helpers.scss\n/// @group o-typography\n////\n\n\n///\n/// Grab all levels of a font the font-scale\n///\n/// @param {String} $name - Name of the font-scale matrix (eg: headline)\n/// @param {Map} $font-scale ($font-scale)\n///\n/// @example\n///  font-size: get-scale(header);\n///\n/// @requires {variable} $font-scale\n///\n/// @return {Map}\n///\n@function get-scale($name, $font-scale: $o-typography-font-scale) {\n    @return map-get($font-scale, $name);\n}\n\n///\n/// Grab info for a particular level of a font-scale\n///\n/// @param {String} $name - Name of the font-scale in the matrix (eg: headline)\n/// @param {Number} $level - Level in the matrix\n/// @param {Map} $font-scale ($font-scale)\n///\n/// @example\n///  font-size: get-scale-level(header, 1);\n///\n/// @requires {variable} $font-scale\n/// @requires {function} get-scale\n///\n/// @return {Map}\n///\n@function get-scale-level($name, $level, $font-scale: $o-typography-font-scale) {\n    @return map-get(get-scale($name, $font-scale), $level);\n}\n\n///\n/// Font-size and line-height shorthand\n///\n/// @param {Number} $size\n/// @param {Number} $line-height ($size)\n///\n/// @example\n///  @include font-size(18, 24);\n///\n/// @requires {function} convert-to-px\n///\n@mixin font-size($size, $line-height: $size) {\n    font-size: convert-to-px($size);\n    line-height: convert-to-px($line-height);\n}\n\n///\n/// Get a font-size for a level in the font-scale matrix\n///\n/// @param {String} $name - Name of the font-scale in the matrix (eg: headline)\n/// @param {Number} $level - Level in the matrix\n/// @param {Map} $font-scale - Configuration\n///\n/// @example\n///  font-size: get-font-size(header, 3);\n///\n/// @requires {variable} $font-scale\n/// @requires {function} convert-to-px\n/// @requires {function} get-scale-level\n///\n/// @return {Number}\n///\n@function get-font-size($name, $level, $font-scale: $o-typography-font-scale, $is-fallback-font: false) {\n\t$scale-by: if(\n\t\t$is-fallback-font,\n\t\tmap-get(map-get($_o-typography-progressive-font-fallbacks, $name), 'fallback-scale'),\n\t\t1\n\t);\n    @return convert-to-px(map-get(get-scale-level($name, $level, $font-scale), font-size) * $scale-by);\n}\n\n///\n/// Get a line-height for a level in the font-scale matrix\n///\n/// @param {String} $name - Name of the font-scale in the matrix (eg: headline)\n/// @param {Number} $level - Level in the matrix\n/// @param {Map} $font-scale - Configuration\n///\n/// @example\n///  font-size: get-line-height(header, 3);\n///\n/// @requires {variable} $font-scale\n/// @requires {function} convert-to-px\n/// @requires {function} get-scale-level\n///\n/// @return {Number}\n///\n@function get-line-height($name, $level, $font-scale: $o-typography-font-scale) {\n    @return convert-to-px(map-get(get-scale-level($name, $level, $font-scale), line-height));\n}\n\n///\n/// Turn any value into pixels\n///\n/// @param {Number} $value\n///\n/// @example\n///  font-size: convert-to-px(14); // 14px\n///\n/// @return {Number}\n///\n@function convert-to-px($value) {\n    @if (type-of($value) == number and $value != 0) {\n        $value: if(unitless($value), $value * 1px, $value);\n    }\n    @return $value;\n}\n\n@function scale-fallback-font-size($name, $size) {\n\t$scale-by: map-get(map-get($_o-typography-progressive-font-fallbacks, $name), 'fallback-scale');\n\t@return $size * $scale-by;\n}\n","////\n/// @group o-fonts\n/// @link http://registry.origami.ft.com/components/o-fonts\n////\n\n/// Path to the assets\n///\n/// @type String\n$o-fonts-path: '//build.origami.ft.com/v2/files/o-fonts-assets@1.3.0/' !default;\n\n/// Silent mode\n///\n/// @type Bool\n$o-fonts-is-silent: true !default;\n\n/// Font families\n///\n/// @type Map\n$o-fonts-families: (\n\tBentonSans: (\n\t\tfont-family: 'BentonSans, sans-serif',\n\t\tvariants: (\n\t\t\t(weight: light, style: normal),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: bold, style: normal)\n\t\t)\n\t),\n\tMillerDisplay: (\n\t\tfont-family: 'MillerDisplay, Georgia, serif',\n\t\tvariants: (\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: bold, style: normal),\n\t\t\t(weight: \"black\", style: normal)\n\t\t)\n\t),\n\tMetricWeb: (\n\t\tfont-family: 'MetricWeb, sans-serif',\n\t\tvariants: (\n\t\t\t(weight: thin, style: normal),\n\t\t\t(weight: light, style: normal),\n\t\t\t(weight: light, style: italic),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: regular, style: italic),\n\t\t\t(weight: medium, style: normal),\n\t\t\t(weight: semibold, style: normal),\n\t\t\t(weight: bold, style: normal),\n\t\t\t(weight: bold, style: italic),\n\t\t)\n\t),\n\tFinancierDisplayWeb: (\n\t\tfont-family: 'FinancierDisplayWeb, serif',\n\t\tvariants: (\n\t\t\t(weight: light, style: italic),\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: medium, style: italic),\n\t\t\t(weight: semibold, style: italic),\n\t\t\t(weight: bold, style: normal)\n\t\t)\n\t),\n\tFinancierTextWeb: (\n\t\tfont-family: 'FinancierTextWeb, serif',\n\t\tvariants: (\n\t\t\t(weight: regular, style: normal),\n\t\t\t(weight: regular, style: italic)\n\t\t)\n\t)\n) !default;\n\n/// Human-readable Font-weights\n///\n/// @access private\n///\n/// @type Map\n$_o-fonts-weights: (\n\t'thin':       100,\n\t'light':      200,\n\t'regular':    400,\n\t'normal':     400,\n\t'medium':     500,\n\t'semibold':   600,\n\t'bold':       700,\n\t'black':      800,\n) !default;\n\n/// Map of families and styles which have already been included\n/// Used to avoid declarations from being multiple times in the CSS output\n///\n/// @access private\n$_o-fonts-families-included: () !default;\n","@if $o-header-is-silent == false {\n\n\t@keyframes o-header-mega {\n\t\t0% {\n\t\t\topacity: 0;\n\t\t}\n\t\t100% {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\t.o-header__mega {\n\t\t@include oTypographySansSize('s');\n\t\t@include oEffectsShadowsElevation('low');\n\t\tdisplay: none;\n\t\tposition: absolute;\n\t\ttop: 100%;\n\t\tleft: oGridGutter('L');\n\t\tright: oGridGutter('L');\n\t\tz-index: $_o-header-mega-z-index;\n\t\tbox-sizing: border-box;\n\t\tpadding: $_o-header-mega-padding-y 0;\n\t\tborder-top: 1px solid oColorsGetColorFor('o-header', 'border');\n\t\tbackground-color: oColorsGetColorFor('o-header-mega', 'background');\n\n\t\t&[aria-expanded=\"true\"],\n\t\t// core experience fallback\n\t\t[data-o-header--no-js] :hover > & {\n\t\t\tdisplay: block;\n\t\t}\n\t}\n\n\t.o-header__mega--animation {\n\t\tanimation: o-header-mega 0.5s ease-out;\n\t}\n\n\t.o-header__mega-wrapper {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\t// no margins for table cells... also so we avoid using :last-child for old IE\n\t\tborder-spacing: $_o-header-mega-padding-x 0;\n\t\tmargin-left: $_o-header-mega-padding-x * -1;\n\t}\n\n\t.o-header__mega-column {\n\t\tdisplay: table-cell;\n\t\tpadding-left: $_o-header-mega-padding-x;\n\t\tborder-left: 1px solid oColorsGetColorFor('o-header', 'border');\n\n\t\t&:first-child {\n\t\t\tborder-left: 0;\n\t\t\tpadding-left: 0;\n\t\t}\n\t}\n\n\t.o-header__mega-heading {\n\t\tmargin: 0 0 $_o-header-padding-y;\n\t\tfont-size: inherit;\n\t\ttext-transform: uppercase;\n\t}\n\n\t.o-header__mega-content {}\n\n\t.o-header__mega-list {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t}\n\n\t.o-header__mega-item {\n\t\tline-height: 1.5;\n\t}\n\n\t.o-header__mega-link {\n\t\t@include oHeaderLink();\n\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\n}\n","////\n/// @group o-effects shadows\n////\n\n/// Elevation\n/// @param {String} $elevation - 'low', 'mid' or 'high'\n/// @param {Color} $color\n/// @output A repeating linear gradient background\n@mixin oEffectsShadowsElevation($elevation: 'low', $color: oColorsGetColorFor('o-effects-shadows-elevation')) {\n\t@if $elevation == 'low' {\n\t\tbox-shadow: 0 10px 20px rgba($color, 0.18), 0 6px 6px rgba($color, 0.22);\n\t}\n\n\t@if $elevation == 'mid' {\n\t\tbox-shadow: 0 14px 28px rgba($color, 0.25), 0 10px 10px rgba($color, 0.22);\n\t}\n\n\t@if $elevation == 'high' {\n\t\tbox-shadow: 0 19px 38px rgba($color, 0.30), 0 15px 12px rgba($color, 0.22);\n\t}\n}\n","@if $o-header-is-silent == false {\n\n\t.o-header__mega-column--articles {\n\n\t\t.o-header__mega-item {\n\t\t\t&:before {\n\t\t\t\t@include oIconsGetIcon('arrow-right', oColorsGetPaletteColor('claret-1'), 10);\n\t\t\t\tcontent: '';\n\t\t\t}\n\t\t}\n\n\t\t.o-header__mega-link {\n\t\t\twhite-space: none;\n\t\t}\n\n\t}\n\n}\n","@if $o-header-is-silent == false {\n\n\t.o-header__mega-column--subsections {\n\t\twidth: 30%;\n\n\t\t.o-header__mega-list {\n\t\t\tcolumns: 2;\n\t\t}\n\n\t\t.o-header__mega-item {\n\t\t\t&:first-child {\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n"],"sourceRoot":"/source/"}